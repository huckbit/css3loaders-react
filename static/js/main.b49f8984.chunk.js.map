{"version":3,"sources":["components/_inc/Navbar.js","components/_inc/Footer.js","layouts/default/index.js","data/loaders.js","components/Card/index.js","components/App/index.js","pages/Loader/LoaderNav.js","pages/Loader/index.js","pages/Documentation/index.js","components/Router.js","serviceWorker.js","index.js"],"names":["useState","activeMenu","setActiveMenu","className","role","aria-label","to","src","width","height","alt","aria-expanded","onClick","aria-hidden","activeStyle","borderBottom","href","target","rel","DefaultLayout","children","Navbar","Footer","id","name","markup","css","Card","html","this","props","spinnerMarkup","title","ReactHtmlParser","pathname","React","Component","loadersComponents","loadersData","map","loader","key","previous","icon","faCaretLeft","next","faCaretRight","match","params","parseInt","length","filter","element","toString","LoaderNav","type","Router","exact","path","component","App","Loader","Documentation","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b49f8984.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nexport default () => {\n  const [activeMenu, setActiveMenu] = useState(false);\n\n  const toggleMenu = () => {\n    setActiveMenu(!activeMenu);\n  };\n\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <Link to=\"/\" className=\"navbar-item\">\n            <img\n              src=\"/images/css3loaders-logo.png\"\n              width=\"112\"\n              height=\"28\"\n              alt=\"logo\"\n            />\n          </Link>\n\n          {/* show the class to based on state to show animation on button */}\n          <div\n            role=\"button\"\n            className={`navbar-burger burger ${\n              activeMenu ? \"is-active\" : \"\"\n            }`}\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            onClick={toggleMenu}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </div>\n        </div>\n        {/* show the class to based on state to show the dropdown */}\n        <div\n          className={`navbar-menu ${activeMenu ? \"is-active\" : \"\"}`}\n        >\n          <div className=\"navbar-start\"></div>\n\n          <div className=\"navbar-end\">\n            <NavLink\n              to=\"/docs\"\n              activeStyle={{\n                borderBottom: \"2px solid #3298dc\",\n              }}\n              className=\"navbar-item\"\n            >\n              Documentation\n            </NavLink>\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <a\n                  href=\"https://www.instagram.com/css3loaders/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"button is-light is-small\"\n                >\n                  <i className=\"fab fa-instagram mr-2\"></i>{\" \"}\n                  <span>Follow me on instagram</span>\n                </a>\n                <a\n                  href=\"https://twitter.com/css3loaders\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"button is-info is-small\"\n                >\n                  <i className=\"fab fa-twitter mr-2\"></i>Follow me on twitter\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>\n          <strong> <Link to=\"/\">css3loaders.com</Link></strong> is created with ♥️ by  <a\n            href=\"https://twitter.com/huckbit\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            huckbit\n          </a>. <br/> Source code and examples released under the <a href=\"https://opensource.org/licenses/MIT\" target=\"_blank\"\n            rel=\"noopener noreferrer\">MIT</a> license.\n        </p>\n      </div>\n    </footer>\n  );\n};\n","import React from \"react\";\nimport Navbar from \"../../components/_inc/Navbar\";\nimport Footer from \"../../components/_inc/Footer\";\n\nexport default function DefaultLayout({ children }) {\n  return (\n    <div className=\"main\">\n      <Navbar />\n      <div className=\"wrap-content\">{children}</div>\n      <Footer />\n    </div>\n  );\n}\n","export default [\n  {\n    id: 1,\n    name: \"pokem\",\n    markup: `<div class=\"pokem\"></div>`,\n    css: `.pokem {\n    position: relative;\n    display: block;\n    height: 70px;\n    width: 70px;\n    border-radius: 50%;\n    background-color: #eeeeee; \n}\n.pokem:after, .pokem:before {\n    content: \"\";\n    border-radius: 50%; \n}\n.pokem::before {\n    position: absolute;\n    border: 35px solid transparent;\n    border-top-color: #D82B2E;\n    top: 0;\n    left: 0;\n    animation: air-spin 2s linear infinite; \n}\n.pokem::after {\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    height: 30px;\n    width: 30px;\n    background-color: #3A85D9; \n}\n@keyframes air-spin {\n    0% {\n        transform: rotate(0deg); \n    }\n    100% {\n        transform: rotate(360deg); \n    } \n}`,\n  },\n  {\n    id: 2,\n    name: \"pacm\",\n    markup: `<div class=\"pacm\"></div>`,\n    css: `.pacm {\n    position: relative;\n    display: block;\n    height: 70px;\n    width: 70px;\n    border-radius: 50%;\n    background: transparent; \n}\n.pacm:after, .pacm:before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    border-radius: 50%;\n    border: 35px solid #FFCC00; \n}\n.pacm:before {\n    border-bottom-color: transparent;\n    animation: chunk-top .6s ease infinite; \n}\n.pacm:after {\n    border-right-color: transparent;\n    animation: chunk-bottom .6s ease infinite; \n}\n@keyframes chunk-top {\n  0%, 100% {\n    transform: rotate(-45deg); \n    }\n  50% {\n    transform: rotate(-80deg); \n    } \n}\n@keyframes chunk-bottom {\n  0%, 100% {\n    transform: rotate(-45deg); \n    }\n  50% {\n    transform: rotate(0deg); \n    } \n}`,\n  },\n  {\n    id: 3,\n    name: \"square wheel\",\n    markup: `<div class=\"square-wheel\"></div>`,\n    css: `.square-wheel {\n    position: relative;\n    display: block;\n    height: 70px;\n    width: 70px;\n    background-color: #eeeeee;\n    border-radius: 5px;\n    animation: spin 4s ease infinite; \n}\n.square-wheel::before {\n    content: \"\";\n    display: block;\n    position: relative;\n    top: 17px;\n    left: 17px;\n    height: 35px;\n    width: 35px;\n    background-color: #1ABC9C;\n    animation: spin 2s ease infinite; \n}\n@keyframes spin {\n    0% {\n        transform: rotate(0deg); \n    }\n    50% {\n        transform: rotate(180deg); \n    }\n    100% {\n        transform: rotate(360deg); \n    } \n}`,\n  },\n  {\n    id: 4,\n    name: \"twins\",\n    markup: `<div class=\"twins\"></div>`,\n    css: `.twins {\n    background: #CDAEDA;\n    position: relative;\n    display: block;\n    height: 70px;\n    width: 70px;\n    border-radius: 50%; \n}\n.twins:after, .twins:before {\n    content: \"\";\n    display: block;\n    height: 70px;\n    width: 70px;\n    border-radius: 50%; \n}\n.twins:after {\n    width: 50px;\n    height: 50px;\n    background: #3498DB;\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    animation: move-left 2s ease infinite; \n}\n.twins:before {\n    width: 50px;\n    height: 50px;\n    background: #2C3E50;\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    animation: move-right 2s ease infinite; \n}\n@keyframes move-left {\n    0% {\n        transform: translateX(0); \n    }\n    25% {\n        transform: translateX(20px) scale(1.2); \n    }\n    50% {\n        transform: translateX(-20px); \n    }\n    100% {\n        transform: translateX(0); \n    } \n}\n@keyframes move-right {\n    0% {\n        transform: translateX(0); \n    }\n    25% {\n        transform: translateX(-20px) scale(1.2);\n        background: #3498DB; \n    }\n    50% {\n        transform: translateX(20px); \n    }\n    100% {\n        transform: translateX(0); \n    } \n}`,\n  },\n  {\n    id: 5,\n    name: \"look\",\n    markup: `<div class=\"look\"></div>`,\n    css: `.look {\n    position: relative;\n    display: block;\n    height: 70px;\n    width: 70px;\n    border-radius: 50%;\n    background-color: #000000;\n    overflow: hidden;\n    border: 2px solid #000000; \n}\n.look:after, .look:before {\n    content: \"\";\n    display: block;\n    height: 70px;\n    width: 70px;\n    border-radius: 50%; \n}\n.look:before {\n    background-color: #ffffff;\n    width: 18px;\n    height: 18px;\n    position: relative;\n    top: 23px;\n    left: 15px;\n    transform-origin: center;\n    animation: shrinkFull 3s linear infinite; \n}\n.look:after {\n    background-color: #ffffff;\n    width: 18px;\n    height: 18px;\n    position: relative;\n    top: 5px;\n    left: 34px;\n    transform-origin: center;\n    animation: shrinkFull 3s linear infinite; \n}\n@keyframes shrinkFull {\n    0% {\n        transform: scale(1); \n    }\n    25% {\n        transform: scale(0.5); \n    }\n    50% {\n        transform: scale(3); \n    }\n    100% {\n        transform: scale(1); \n    } \n}`,\n  },\n  {\n    id: 6,\n    name: \"nuclear\",\n    markup: `<div class=\"nuclear\"></div>`,\n    css: `.nuclear {\n    position: relative;\n    display: block;\n    height: 70px;\n    width: 70px;\n    border-radius: 50%;\n    background: #2980B9;\n    animation: ripple 2s linear infinite; \n}\n    .nuclear:after, .nuclear:before {\n        content: \"\";\n        display: block;\n        height: 70px;\n        width: 70px;\n        border-radius: 50%; \n    }\n    .nuclear:before {\n        background: #000;\n        animation: pulse 2s ease-out infinite; \n    }\n    @keyframes ripple {\n        0% {\n            box-shadow: 0 0 0 0 rgba(204, 204, 204, 0.4); \n        }\n        50% {\n            box-shadow: 0 0 2px 3em rgba(204, 204, 204, 0.2); \n        }\n        100% {\n            box-shadow: 0 0 7em 7em rgba(204, 204, 204, 0.1); \n        } \n    }\n    @keyframes pulse {\n        0% {\n            transform: scale(0.1); \n        }\n        100% {\n            transform: scale(1); \n        } \n    }`,\n  },\n];\n","import React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { Link } from \"react-router-dom\";\n\nclass Card extends React.Component {\n  render() {\n    let html = this.props.spinnerMarkup;\n\n    return (\n      <div className=\"card has-text-centered\">\n        <div className=\"card-image\"></div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-content\">\n              <p className=\"title is-4\">{this.props.title}</p>\n            </div>\n          </div>\n          <div className=\"loader-content\">\n            <div className=\"loader-preview\">{ReactHtmlParser(html)}</div>\n            <Link\n              to={{ pathname: `loader/${this.props.id}` }}\n              className=\"button is-info my-4\"\n            >\n              Source\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./App.scss\";\nimport DefaultLayout from \"../../layouts/default\";\nimport loadersData from \"../../data/loaders\";\nimport Card from \"../Card\";\n\nexport default () => {\n    const loadersComponents = loadersData.map((loader) => (\n      <Card\n        key={loader.id}\n        id={loader.id}\n        title={loader.name}\n        spinnerMarkup={loader.markup}\n      />\n    ))\n    return (\n      <DefaultLayout>\n        <div className=\"section mt-5\">\n          <div className=\"container\">\n            <div className=\"cards-grid\">{loadersComponents}</div>\n          </div>\n        </div>\n      </DefaultLayout>\n    );\n  }","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretLeft, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nexport default (props) => {\n  return (\n    <div className=\"columns is-mobile\">\n      <div className=\"column is-2\">\n        <Link className=\"title is-2\" to={{ pathname: `/loader/${props.previous}` }}>\n          <FontAwesomeIcon icon={faCaretLeft} />\n        </Link>\n      </div>\n      <div className=\"column has-text-centered\">\n        <h1 className=\"title is-1\">{props.name}</h1>\n      </div>\n      <div className=\"column is-2 has-text-right\">\n        <Link className=\"title is-1 is-mobile-2\" to={{ pathname: `/loader/${props.next}` }}>\n          <FontAwesomeIcon icon={faCaretRight} />\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport DefaultLayout from \"../../layouts/default\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport LoaderNav from \"./LoaderNav\";\n\nimport loadersData from \"../../data/loaders\";\n\nexport default (props) => {\n    const id = props.match.params.id;\n    const previous = id > 1 ? parseInt(id) - 1 : loadersData.length;\n    const next = id < loadersData.length ? parseInt(id) + 1 : 1;\n    const loaderItem = loadersData.filter(\n      (element) => element.id.toString() === id\n    );\n    const { name, markup, css } = loaderItem[0];\n    \n    return (\n      <DefaultLayout>\n        <div className=\"section\">\n          <div className=\"container\">\n            <LoaderNav previous={previous} next={next} name={name} />\n            <div className=\"columns\">\n              <div className=\"column is-5\">\n                <div className=\"message\">\n                  <div className=\"message-header\">preview</div>\n                  <div className=\"message-body loader-content\">\n                    <div className=\"loader-preview\">\n                      {ReactHtmlParser(markup)}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"message\">\n                  <div className=\"message-header\">markup</div>\n                  <div className=\"message-body\">\n                    <pre>\n                      <code>{markup}</code>\n                    </pre>\n                  </div>\n                </div>\n              </div>\n              <div className=\"column\">\n                <div className=\"message\">\n                  <div className=\"message-header\">css</div>\n                  <div className=\"message-body\">\n                    <pre>\n                      <code>{css}</code>\n                    </pre>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </DefaultLayout>\n    );\n  }","import React from \"react\";\nimport DefaultLayout from \"../../layouts/default\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => {\n  const pokemHtml = `<div className=\"pokem\"></div>`;\n  const pokemCss = `\n.pokem {\n  position: relative;\n  display: block;\n  height: 70px;\n  width: 70px;\n  border-radius: 50%;\n  background-color: #eeeeee; \n}\n.pokem:after, .pokem:before {\n    content: \"\";\n    border-radius: 50%; \n}\n.pokem::before {\n    position: absolute;\n    border: 35px solid transparent;\n    border-top-color: #D82B2E;\n    top: 0;\n    left: 0;\n    animation: air-spin 2s linear infinite; \n}\n.pokem::after {\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    height: 30px;\n    width: 30px;\n    background-color: #3A85D9; \n}\n@keyframes air-spin {\n    0% {\n        transform: rotate(0deg); }\n    100% {\n        transform: rotate(360deg); } \n}`;\n\n  return (\n    <DefaultLayout>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns mt-5\">\n            <div className=\"column is-offset-2 is-8\">\n              <p className=\"has-text-centered mb-5\">\n                <i className=\"fas fa-question is-size-1\"></i>\n              </p>\n              <h1 className=\"is-size-1 mt-3 pb-5\">\n                How to use a spinner in your website\n              </h1>\n              <p className=\"pb-2\">\n                The process is very simple. All you'll need to do is: \n              </p>\n              <div className=\"content\">\n                <ol type=\"1\">\n                  <li>copy the html from the <b>markup</b> section and paste it in your html file.</li>\n                  <li>copy the css from the <b>css</b> section and paste it in your css file.</li>\n                  <li>done!</li>\n                </ol> \n              </div>\n              <p className=\"pb-4\">\n                What, if we want to use the loader <Link to=\"loader/1\">pokem</Link> for example?\n              </p>\n              <p className=\"mb-4 has-text-centered loader-content\">\n                <span className=\"loader-preview\">\n                <span className=\"pokem\"></span>\n                </span>\n              </p>\n              <span className=\"pb-4\">\n                Go the <Link to=\"loader/1\">pokem code page</Link>, select all\n                the code inside the section <b>markup</b>:\n                <pre className=\"my-3\">{pokemHtml}</pre>\n                paste it in your html file.\n              </span>\n              <span className=\"pb-4\">\n                After that select the code inside the section <b>css</b>:\n                <pre className=\"my-3\">{pokemCss}</pre>\n                and paste it in your css file and save it.\n              </span>\n              <p>Cool! <span className=\"is-size-3\" role=\"img\" aria-label=\"hand\"> 🙌</span> Now the spinner should be visible on your page!</p>\n            </div>\n          </div>\n        </div>\n      </div> \n    </DefaultLayout>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport App from \"../components/App\";\nimport Loader from \"../pages/Loader\";\nimport Documentation from \"../pages/Documentation\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/loader/:id\" component={Loader} />\n      <Route path=\"/docs\" component={Documentation} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./components/Router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}